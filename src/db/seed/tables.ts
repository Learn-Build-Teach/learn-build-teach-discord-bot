import { getClient } from '../pg-client';

export const createDiscordUsersTable = async () => {
  if (await tableExists('DiscordUsers', 'public')) {
    console.log('public.DiscordUsers already exists');
    return;
  }

  await queryDatabase(`
    CREATE TABLE public."DiscordUsers" (
        id bigint generated by default as identity not null,
        "createdAt" date null,
        "lastActive" date null,
        username text null,
        github text null,
        twitter text null,
        twitch text null,
        youtube text null,
        website text null,
        instagram text null,
        tiktok text null,
        linkedin text null,
        polywork text null,
        "numMessages" int8 null,
        xp int8 null,
        constraint "DiscordUsers_pkey" primary key (id)
    ) tablespace pg_default;
  `);

  console.log('created public.DiscordUsers');
};

export const createKudosTable = () => {};

const tableExists = async (table: string, schema: string): Promise<boolean> => {
  const result = await queryDatabase(`
    SELECT EXISTS (
      SELECT FROM information_schema.tables
      WHERE table_schema = '${schema}'
      AND table_name = '${table}'
    )
  `);

  return result?.rows[0]['exists'];
};

const queryDatabase = async (query: string) => {
  const client = getClient();
  let result;
  try {
    await client.connect();
    result = await client.query(query);
    await client.end();
  } catch (error: any) {
    await client.end();
    throw new Error(error.toString());
  }

  return result;
};
